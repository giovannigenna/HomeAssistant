blueprint:
  name: Condizionatore Smart Energetico
  description: Gestione intelligente clima con soglie personalizzate.
  domain: automation
  input:
    condizionatore:
      name: Climatizzatore
      selector:
        entity:
          domain: climate
    temperatura:
      name: Sensore temperatura
      selector:
        entity:
          domain: sensor
    umidita:
      name: Sensore umiditÃ 
      selector:
        entity:
          domain: sensor
    consumo:
      name: Sensore consumo
      selector:
        entity:
          domain: sensor
    persona:
      name: Persona presente
      selector:
        entity:
          domain: person
    soglia_caldo:
      default: 21
      selector:
        number: {min: 10, max: 30, step: 0.5}
    soglia_freddo:
      default: 26
      selector:
        number: {min: 20, max: 35, step: 0.5}
    soglia_umidita:
      default: 60
      selector:
        number: {min: 0, max: 100}
    soglia_consumo:
      default: 2500
      selector:
        number: {min: 0, max: 10000}
    target_caldo:
      default: 21
      selector:
        number: {min: 10, max: 30}
    target_freddo:
      default: 23
      selector:
        number: {min: 15, max: 30}

trigger:
  - platform: time_pattern
    minutes: "/5"
  - platform: state
    entity_id: !input temperatura
  - platform: state
    entity_id: !input umidita
  - platform: state
    entity_id: !input persona

condition:
  - condition: state
    entity_id: !input persona
    state: "home"
  - condition: template
    value_template: >
      {{ states(!input 'consumo') | float < (input('soglia_consumo') | float) }}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ states(!input 'temperatura') | float > (input('soglia_freddo') | float)
                 and states(!input 'umidita') | float > (input('soglia_umidita') | float) }}
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input condizionatore
            data:
              temperature: !input target_freddo
              hvac_mode: cool
      - conditions:
          - condition: template
            value_template: >
              {{ states(!input 'temperatura') | float < (input('soglia_caldo') | float) }}
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input condizionatore
            data:
              temperature: !input target_caldo
              hvac_mode: heat
    default:
      - service: climate.turn_off
        target:
          entity_id: !input condizionatore
