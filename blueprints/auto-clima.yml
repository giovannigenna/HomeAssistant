blueprint:
  name: Climatizzazione Smart
  description: |
    Accende o spegne un climatizzatore automaticamente in base a orario, temperatura, umidità,
    consumo elettrico e presenza in casa.
  domain: automation
  input:
    climate_entity:
      name: Climatizzatore
      selector:
        entity:
          domain: climate
    temp_sensor:
      name: Sensore Temperatura
      selector:
        entity:
          domain: sensor
    humidity_sensor:
      name: Sensore Umidità
      selector:
        entity:
          domain: sensor
    power_sensor:
      name: Sensore Consumo
      selector:
        entity:
          domain: sensor
    person_entity:
      name: Persona
      selector:
        entity:
          domain: person
    power_threshold:
      name: Soglia Massima di Consumo
      default: 2500
      selector:
        number:
          min: 100
          max: 5000
          step: 100
    min_temp:
      name: Temperatura Minima per Caldo
      default: 21
      selector:
        number:
          min: 15
          max: 25
          step: 0.5
    max_temp:
      name: Temperatura Massima per Freddo
      default: 26
      selector:
        number:
          min: 20
          max: 35
          step: 0.5
    max_humidity:
      name: Umidità Massima
      default: 60
      selector:
        number:
          min: 20
          max: 100
          step: 1
    target_temp_heat:
      name: Temperatura Target (Caldo)
      default: 21
      selector:
        number:
          min: 18
          max: 24
          step: 0.5
    target_temp_cool:
      name: Temperatura Target (Freddo)
      default: 23
      selector:
        number:
          min: 20
          max: 26
          step: 0.5
    happy_hour_start:
      name: Inizio Happy Hour
      default: "19:00:00"
      selector:
        time: {}
    happy_hour_end:
      name: Fine Happy Hour
      default: "22:00:00"
      selector:
        time: {}

trigger:
  - platform: state
    entity_id: !input person_entity
  - platform: numeric_state
    entity_id: !input temp_sensor
  - platform: numeric_state
    entity_id: !input humidity_sensor
  - platform: numeric_state
    entity_id: !input power_sensor
  - platform: time
    at: !input happy_hour_start
  - platform: time
    at: !input happy_hour_end

condition:
  - condition: state
    entity_id: !input person_entity
    state: "home"
  - condition: numeric_state
    entity_id: !input power_sensor
    below: !input power_threshold

action:
  - choose:
      - conditions:
          - condition: time
            after: !input happy_hour_start
            before: !input happy_hour_end
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input climate_entity
            data:
              temperature: !input target_temp_heat
              hvac_mode: "heat"
      - conditions:
          - condition: numeric_state
            entity_id: !input temp_sensor
            above: !input max_temp
          - condition: numeric_state
            entity_id: !input humidity_sensor
            above: !input max_humidity
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input climate_entity
            data:
              temperature: !input target_temp_cool
              hvac_mode: "cool"
    default:
      - service: climate.turn_off
        target:
          entity_id: !input climate_entity
